Useful sites to get data from:
  https://cve.mitre.org - main one!
  https://securitytracker.com
  https://www.exploit-db.com/


Ideas (random and chaotic):
  1. Maybe treat big projects separately. Big projects usually have their own
issue tracking platform, so it's harder to get the commits, but it should be
worth it anyways.
  2. Prioritize github repos?
  3. Github issues are a thing?
  4. How to extract language?
  5. How to specify vulnerability class? Do we need it?
  6. How to distinguish open source code from private?

Questions:


TODO:
  1. Make a list of big projects and custom stuff for each of them.
  2. Add tags for each CVE (e.g. "linux", "C", ...)
  3. Search for each CVE on github using smart search and limiting
languages/formats/etc.
  4. Read https://blog.github.com/2017-11-16-introducing-security-alerts-on-github/





Repositories with patches:
  1. https://github.com/raymanfx/android-cve-checker/tree/master/patches
  2. cve patch site:gist.github.com
  3. https://github.com/nluedtke/linux_kernel_cves
  4. https://github.com/snyk/vulnerabilitydb/tree/master/data
  5. https://nodejs.org/en/blog/vulnerability/
  6. https://github.com/offensive-security/exploit-database - grep it for github
commits (a commit is usually a patch)
  7. https://git.kernel.org
